# Generated by Django 5.1.6 on 2025-04-21 17:21

import django.core.validators
import django.db.models.deletion
import issues.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("department", "0001_initial"),
        ("issues", "0007_issues_category_issues_course_code"),
        ("users", "0013_alter_user_managers_alter_collegeregister_college_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                            ("rejected", "Rejected"),
                        ],
                        db_index=True,
                        default="open",
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("missing_marks", "Missing Marks"),
                            ("appeals", "Appeals"),
                            ("correction", "Correction"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "course_code",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Course code must be 3-4 letters followed by 4 digits (e.g., CSC1200)",
                                regex="^[A-Z]{3,4}\\d{4}$",
                            )
                        ],
                    ),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=issues.models.issue_attachment_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "pdf",
                                    "doc",
                                    "docx",
                                ]
                            ),
                            issues.models.validate_file_size,
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status_changed_at", models.DateTimeField(auto_now_add=True)),
                ("resolution_notes", models.TextField(blank=True, null=True)),
                (
                    "assigned_lecturer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_issues",
                        to="users.lecturer",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="authored_issues",
                        to="users.student",
                    ),
                ),
                (
                    "college",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="department.college",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="department.department",
                    ),
                ),
                (
                    "handled_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="handled_issues",
                        to="users.collegeregister",
                    ),
                ),
                (
                    "last_updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="department.school",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.DeleteModel(
            name="Issues",
        ),
        migrations.AddIndex(
            model_name="issue",
            index=models.Index(fields=["status"], name="issues_issu_status_003ba6_idx"),
        ),
        migrations.AddIndex(
            model_name="issue",
            index=models.Index(
                fields=["assigned_lecturer", "status"],
                name="issues_issu_assigne_a8db3b_idx",
            ),
        ),
    ]
